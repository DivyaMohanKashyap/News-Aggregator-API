name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: news
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: "no"
        ports:
          - 3306:3306  # Host port 3306 mapped to container's 3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Pull Laravel App Image
        run: docker pull ghcr.io/divyamohankashyap/news-api-app:latest

      - name: Start Laravel App Container
        run: |
          docker run -d --name news-api-app \
            -v ${{ github.workspace }}:/var/www \
            -w /var/www \
            ghcr.io/divyamohankashyap/news-api-app:latest \
            sleep infinity

      - name: Copy .env.testing into container
        run: docker cp .env.testing news-api-app:/var/www/.env

      - name: Wait for MySQL to be ready (port 3306)
        run: |
          for i in {1..5}; do
            if docker run --rm --network container:news-api-app mysql:8.0 \
              mysql -h 127.0.0.1 -u root -proot -e "SELECT 1;" > /dev/null 2>&1; then
              echo "✅ MySQL is ready for host 127.0.0.1"
              break
            fi
            echo "⏳ Waiting for MySQL for host 127.0.0.1 ($i)..."
            sleep 2
          done
          for j in {1..5}; do
            if docker run --rm --network container:news-api-app mysql:8.0 \
              mysql -h db -u root -proot -e "SELECT 1;" > /dev/null 2>&1; then
              echo "✅ MySQL is ready for host db "
              break
            fi
            echo "⏳ Waiting for MySQL for host db ($j)..."
            sleep 2
          done

      - name: Composer install
        run: docker exec news-api-app composer install --no-interaction --prefer-dist --no-scripts

      - name: Clear Laravel caches
        run: |
          docker exec news-api-app php artisan optimize:clear
          docker exec news-api-app php artisan config:clear
          docker exec news-api-app php artisan route:clear
          docker exec news-api-app php artisan view:clear
          docker exec news-api-app php artisan cache:clear

      - name: Run migrations
        run: docker exec news-api-app php artisan migrate --force

      - name: Run PHPUnit tests with coverage
        run: docker exec news-api-app php artisan test --env=testing --coverage-clover=coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
