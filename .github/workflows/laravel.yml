name: Laravel CI with Docker Compose

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]

jobs:
  build-docker-image:
    name: Build & Cache Laravel Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Build Docker image from docker-compose
        run: docker compose build

      - name: Tag the app image
        run: docker tag $(docker images --filter=reference='*/app' --format "{{.Repository}}") news-api-app

      - name: Save Docker image to tarball
        run: docker save news-api-app -o news-api-app.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-docker-image
          path: news-api-app.tar

  laravel-tests:
    name: Run Laravel Tests with Coverage
    runs-on: ubuntu-latest
    needs: build-docker-image

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: laravel-docker-image

      - name: Load Docker image
        run: docker load -i news-api-app.tar

      - name: Start Docker Compose services
        run: docker compose up -d

      - name: Wait for services to be ready
        run: sleep 20

      - name: Run Laravel tests with coverage
        run: |
          docker exec news-api-app mkdir -p storage/test-results
          docker exec news-api-app ./vendor/bin/phpunit --coverage-clover storage/test-results/coverage.xml > storage/test-results/results.log

      - name: Upload PHPUnit coverage report
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-coverage
          path: storage/test-results/coverage.xml

      - name: Upload PHPUnit logs
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-logs
          path: storage/test-results/results.log
