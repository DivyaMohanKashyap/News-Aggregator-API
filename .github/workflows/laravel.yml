name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  IMAGE_NAME: ghcr.io/divyamohankashyap/news-api-app
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$IMAGE_TAG

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: testing_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 --silent" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Pull Docker image
        run: docker pull $IMAGE_NAME:$IMAGE_TAG

      - name: Copy .env.testing
        run: |
          if [ -f .env.testing ]; then
            cp .env.testing .env
          else
            echo ".env.testing is missing" && exit 1
          fi

      - name: Install dependencies
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/var/www \
            -w /var/www \
            $IMAGE_NAME:$IMAGE_TAG \
            composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Wait for MySQL to be ready
        run: |
          until docker compose exec -T db mysql -uroot -psecret -e "SELECT 1"; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Start Docker Compose
        run: docker compose -f docker-compose.yml up -d --wait

      - name: Run Laravel Tests via Docker Compose
        run: docker compose exec -T app php artisan migrate:fresh --seed && docker compose exec -T app php artisan test

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.xml
