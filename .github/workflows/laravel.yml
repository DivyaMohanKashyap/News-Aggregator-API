name: Laravel CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: news
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with GitHub Container Registry (GHCR)
        run: echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull prebuilt Laravel image
        run: docker pull ghcr.io/divyamohankashyap/news-api-app:latest

      - name: Create .env.testing file
        run: |
          cat <<EOF > .env.testing
          APP_NAME=Laravel
          APP_ENV=testing
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=true
          APP_URL=http://localhost

          LOG_CHANNEL=stack
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120

          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          EOF

      - name: Copy .env.testing to .env
        run: cp .env.testing .env

      - name: Start Laravel container from prebuilt image
        run: |
          docker run -d --name news-api-app \
            --network host \
            -v ${{ github.workspace }}:/var/www \
            ghcr.io/divyamohankashyap/news-api-app:latest \
            sh -c "sleep 10 && php artisan migrate --force && php-fpm"

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --no-scripts

      - name: Copy vendor into container
        run: docker cp vendor news-api-app:/var/www

      - name: Run Laravel Tests
        run: docker exec news-api-app php artisan test --log-junit test-report.xml

      - name: Store Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: laravel-test-report
          path: test-report.xml
