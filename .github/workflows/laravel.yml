name: Run Laravel Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .env.testing
        run: |
          cat <<EOF > .env.testing
          APP_ENV=testing
          APP_DEBUG=true
          LOG_CHANNEL=stack
          DB_CONNECTION=mysql
          DB_HOST=db
          DB_PORT=3306
          DB_DATABASE=testing_db
          DB_USERNAME=root
          DB_PASSWORD=secret
          CACHE_DRIVER=redis
          QUEUE_CONNECTION=sync
          REDIS_HOST=redis
          EOF

      - name: Build and start containers
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if docker exec news-api-db mysql -uroot -psecret -e "SHOW DATABASES;" > /dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting ($i)..."
            sleep 2
          done

      - name: Run Laravel tests with coverage
        run: |
          docker exec news-api-app php artisan config:clear
          docker exec news-api-app php artisan migrate:fresh --seed
          docker exec news-api-app php artisan test --log-junit /var/www/test-report.xml --coverage-clover=/var/www/coverage.xml

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Shutdown containers
        if: always()
        run: docker-compose -f docker-compose.yml down -v
