openapi: 3.0.3
info:
  title: News Aggregator API
  description: REST API for a news aggregator using Laravel.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

tags:
  - name: Auth
  - name: Articles
  - name: Preferences
  - name: Feed

paths:
  /register:
    post:
      tags: [Auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        '201':
          description: User registered
        '422':
          description: Validation error

  /login:
    post:
      tags: [Auth]
      summary: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, format: email }
                password: { type: string }
      responses:
        '200':
          description: Authenticated with token

  /articles:
    get:
      tags: [Articles]
      summary: Get all new articles
      parameters:
        - in: query
          name: search
          schema: { type: string }
        - in: query
          name: per_page
          schema: { type: integer, default: 10 }
        - in: query
          name: page
          schema: { type: integer, default: 1 }
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        description: URL to the current page
                      last:
                        type: string
                        description: URL to the next page, if available
                      prev:
                        type: string
                        description: URL to the previous page, if available
                      next:
                        type: string
                        description: URL to the next page, if available
        '404':
          description: Not found

  /articles/{id}:
    get:
      tags: [Articles]
      summary: Get single news article
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Article details
        '404':
          description: Not found

  /user/preferences:
    get:
      tags: [Preferences]
      summary: Get user preferences
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Preferences returned

    post:
      tags: [Preferences]
      summary: Set user preferences
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categories: { type: array, items: { type: string } }
                sources: { type: array, items: { type: string } }
                authors: { type: array, items: { type: string } }
      responses:
        '200':
          description: Preferences saved

  /user/feed:
    get:
      tags: [Feed]
      summary: Get personalized article feed
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Personalized feed based on user preferences

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
